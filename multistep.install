<?php

/**
 * Implements hook_install().
 */
function multistep_install() {
  // Set multistep to a higher weight so that it allows extra fields to load first.
  db_update('system')
    ->fields(array(
      'weight' => 10,
    ))
    ->condition('name', 'multistep')
    ->execute();
}

/**
 * Implements hook_schema().
 */
function multistep_schema() {
  $schema['multistep'] = array(
    'description' => 'Keeps track of submitted steps in multistep forms.',
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The primary identifier for a node.',
      ),
      'step' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'A particular step of the nid.',
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The status of the step.',
      ),
    ),
    'primary key' => array('nid', 'step'),
    'indexes' => array(
      'multistep_nid_step' => array('nid', 'step'),
      'multistep_status' => array(array('status', 1)),
    ),
  );
  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function multistep_update_last_removed() {
  return 7101;
}

/**
 * Migrate multistep variables to config.
 */
function multistep_update_1000() {
  $config = config('multistep.settings');
  $config->set('status_revisions', update_variable_get('multistep_status_revisions', 'default'));
  $config->set('status_publishing', update_variable_get('multistep_status_publishing', 'default'));
  $config->set('workflow_mode', update_variable_get('multistep_workflow_mode', 'free'));
  $config->set('show_step_numbers', update_variable_get('multistep_show_step_numbers', FALSE));
  $config->set('button_prev', update_variable_get('multistep_button_prev', '< Previous'));
  $config->set('button_next', update_variable_get('multistep_button_next', 'Next >'));
  $config->set('button_save', update_variable_get('multistep_button_save', TRUE));
  $config->set('button_done', update_variable_get('multistep_button_done', 'Done'));
  $config->save();

  update_variable_del('multistep_status_revisions');
  update_variable_del('multistep_status_publishing');
  update_variable_del('multistep_workflow_mode');
  update_variable_del('multistep_show_step_numbers');
  update_variable_del('multistep_button_prev');
  update_variable_del('multistep_button_next');
  update_variable_del('multistep_button_save');
  update_variable_del('multistep_button_done');
  foreach (node_type_get_types() as $type) {
    // This variable isn't actually in use!
    update_variable_del('multistep_enabled_' . $type->type);
    // Some variables are now stored as Block settings, so folks will need to
    // manually configure the new blocks for these. We'll still delete the old
    // variables so they're not lying around.
    update_variable_del('multistep_body_' . $type->type);
    update_variable_del('multistep_menu_' . $type->type);
    update_variable_del('multistep_progress_' . $type->type);
  }
}
